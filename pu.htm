<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trends for Controllable PUs Bar Graph</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
            animation: fadein 1s;
        }

        @keyframes fadein {
            from { opacity: 0; }
            to   { opacity: 1; }
        }

        h1 {
            text-align: center;
            color: #333;
        }

        select {
            padding: 8px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 20px;
        }

        #chart-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            animation: slideup 1s;
        }

        @keyframes slideup {
            from { transform: translateY(50px); opacity: 0; }
            to   { transform: translateY(0); opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Trends for Controllable PUs Bar Graph</h1>
        <div>
            <label for="year-select">Select Year:</label>
            <select id="year-select">
                <option value="2015">2015</option>
                <option value="2016">2016</option>
                <option value="2017">2017</option>
                <option value="2018">2018</option>
                <option value="2019">2019</option>
                <option value="2020">2020</option>
                <option value="2021">2021</option>
                <option value="2022">2022</option>
                <option value="2023">2023</option>
                <option value="2024">2024</option>
            </select>
        </div>
        <div id="chart-container">
            <canvas id="myChart"></canvas>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Fetch Excel data
            fetch('./PUs.xlsx')
                .then(response => response.arrayBuffer())
                .then(data => {
                    // Parse Excel data
                    const workbook = XLSX.read(new Uint8Array(data), { type: 'array' });
                    const sheetName = workbook.SheetNames[0];
                    const sheet = workbook.Sheets[sheetName];
                    const range = XLSX.utils.decode_range(sheet['!ref']);

                    const yearsData = {};

                    for (let i = range.s.r + 1; i <= range.e.r; i++) {
                        const cellMonth = sheet[XLSX.utils.encode_cell({ r: i, c: 0 })].w;
                        const cellRgb = sheet[XLSX.utils.encode_cell({ r: i, c: 1 })].v;
                        const cellExp = sheet[XLSX.utils.encode_cell({ r: i, c: 2 })].v;
                        const cellYear = sheet[XLSX.utils.encode_cell({ r: i, c: 3 })].w;

                        if (!yearsData[cellYear]) {
                            yearsData[cellYear] = {};
                        }

                        if (!yearsData[cellYear][cellMonth]) {
                            yearsData[cellYear][cellMonth] = { rgb: 0, exp: 0 };
                        }

                        yearsData[cellYear][cellMonth].rgb += cellRgb;
                        yearsData[cellYear][cellMonth].exp += cellExp;
                    }

                    const ctx = document.getElementById('myChart').getContext('2d');
                    const myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: [],
                            datasets: [
                                {
                                    label: 'RGB',
                                    data: [],
                                    backgroundColor: 'rgba(255, 99, 132, 0.7)',
                                    borderColor: 'rgba(255, 99, 132, 1)',
                                    borderWidth: 1
                                },
                                {
                                    label: 'Exp',
                                    data: [],
                                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 1
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            aspectRatio: 2,
                            scales: {
                                x: {
                                    stacked: true,
                                    grid: {
                                        display: false
                                    },
                                    ticks: {
                                        autoSkip: false,
                                        maxRotation: 45,
                                        minRotation: 45,
                                        color: '#555',
                                        font: {
                                            size: 14,
                                            weight: 'bold'
                                        }
                                    }
                                },
                                y: {
                                    stacked: true,
                                    beginAtZero: true,
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    },
                                    ticks: {
                                        color: '#555',
                                        font: {
                                            size: 14,
                                            weight: 'bold'
                                        }
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    labels: {
                                        font: {
                                            size: 16,
                                            weight: 'bold'
                                        }
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            let label = context.dataset.label || '';
                                            if (label) {
                                                label += ': ';
                                            }
                                            label += context.parsed.y;
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });

                    // Dropdown change event listener
                    const yearSelect = document.getElementById('year-select');
                    yearSelect.addEventListener('change', updateChart);

                    function updateChart() {
                        const selectedYear = yearSelect.value;
                        const data = yearsData[selectedYear];

                        const labels = Object.keys(data);
                        const rgbData = labels.map(month => data[month].rgb);
                        const expData = labels.map(month => data[month].exp);

                        myChart.data.labels = labels;
                        myChart.data.datasets[0].data = rgbData;
                        myChart.data.datasets[1].data = expData;
                        myChart.update();
                    }

                    // Initial chart display
                    updateChart();
                })
                .catch(error => console.error('Error fetching Excel file:', error));
        });
    </script>
</body>
</html>